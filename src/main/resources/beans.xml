<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean id="args" class="shaif.camelworker.CommandLineBean"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="#{args.jdbcUrl}"/>
        <property name="username" value="#{args.login}"/>
        <property name="password" value="#{args.password}"/>
        <property name="accessToUnderlyingConnectionAllowed" value="true"/>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> 

    <tx:annotation-driven transaction-manager="txManager"/>
    
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"></property>
    </bean>    
    
    <bean id="JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
    <bean id="main" class="shaif.camelworker.Main">
        <property name="jt" ref="JdbcTemplate"/>
        <property name="self" ref="main"/>
    </bean>
    <!-- bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">        
        <property name="brokerURL" value="#{args.brokerUrl}"/>
    </bean -->    
    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"> 
        <property name="brokerURL" value="#{args.brokerUrl}"/> 
    </bean> 
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop"> 
        <property name="maxConnections" value="8"/> 
        <property name="connectionFactory" ref="jmsConnectionFactory"/> 
    </bean> 
    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration"> 
        <property name="connectionFactory" ref="pooledConnectionFactory"/> 
        <property name="concurrentConsumers" value="10"/> 
    </bean> 
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent"> 
        <property name="configuration" ref="jmsConfig"/> <!-- If transacted=true then enable CACHE_CONSUMER (if not using XA) to run faster. See more details at: http://camel.apache.org/jms --> <!--  <property name="transacted" value="true"/> <property name="cacheLevelName" value="CACHE_CONSUMER"/> --> 
    </bean>    
    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <!-- Camel route to feed the ActiveMQ inbox queue once per second -->
        <route id="timerToInRoute">
            <from uri="timer:foo?period=1s"/>
            <transform>
                <simple>Message at ${date:now:yyyy-MM-dd HH:mm:ss}</simple>
            </transform>
            <to uri="activemq:queue:inbox"/>
        </route>

        <!-- Camel route to move messages from the ActiveMQ inbox to its outbox queue -->
        <route id="inToOutRoute">
            <from uri="activemq:queue:inbox"/>
            <log message="Routing message from inbox to outbox queue with data ${body}"/>
            <to uri="activemq:queue:outbox"/>
        </route>

    </camelContext>    
</beans>
